apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubepod.fullname" . }}
  namespace: {{ .Values.namespace| default .Release.Namespace }}
  labels:
    {{- include "kubepod.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kubepod.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubepod.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubepod.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
            - /kubepod
          args:
            - "--eks.cluster.name={{ .Values.eksConfig.clusterName }}"
            - "--aws.region={{ .Values.aws.region }}"
            - "--log-level={{ .Values.logLevel }}"
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aws.secretName }}
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aws.secretName }}
                  key: secret_access_key
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aws.secretName }}
                  key: session_token

